{"version":3,"sources":["Core/Sprite/BaseSprite.ts","reportWebVitals.ts","Core/MathTools.ts","Core/Interpolation/Point.ts","Core/Sprite/Transform.ts","Core/Sprite/CoreSprite/RectSprite.ts","Core/App/Shared/Event.ts","Core/Interpolation/BezierCurve.ts","Core/App/Shared/CoreTimer.ts","Core/App/Shared/Vec2.ts","Core/App/C2DApplication.ts","Core/App/DrawUtils/draw.ts","GamePlay/Test.ts","Componnet/GamePlay.ts","index.tsx"],"names":["BaseSpriteType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MathTools","numbers","addNumbers","error","getMean","x","Math","sqrt","value","minv","maxv","clamp","abs","Point","y","this","other","scalar","Sqrt","lenSquare","len","distanceSquare","dx","dy","p0","p1","t","onet","out","Transform","_position","rotation","localScale","localPosition","root","childs","_parent","Array","cld","push","index","indexOf","splice","p","RemoveChild","AddChild","pos","BaseSprite","layer","layerSort","parent","type","transform","spriteLayer","None","EInputEventType","RectSprite","height","width","_rectInfo","ctx","strokeRect","position","rectInfo","newRect","clone","scaleXY","BezierCurve","time","point","length","newPoint","i","np","scale","scaleAndAdd","Bezier","CoreTimer","callback","id","enabled","callbackData","undefined","countdown","timeout","onlyOnce","vec2","values","Float32Array","CanvasInputEvent","altKey","ctrlKey","shiftKey","MOUSEEVENT","CanvasMouseEvent","canvasPos","button","canvasPosition","create","CanvasKeyBoardEvent","key","keyCode","repeat","KEYBOARDEVENT","Canvas2DApplication","canvas","cv","context2D","getContext","fillStyle","_start","_appId","_lastTime","_startTime","_fps","isSupportMouseMove","_isMouseDown","timers","_timerId","addEventListener","window","cancelAnimationFrame","requestAnimationFrame","step","bind","timeStamp","elapsedMsec","intervalSec","_handleTimers","Update","Render","evt","dispatchMouseDown","_toCanvasMouseEvent","dispatchMouseUp","dispatchMouseMove","dispatchMouseDrag","dispatchKeyPress","_toCanvasKeyBoardEvent","dispatchKeyDown","dispatchKeyUp","event","rect","getBoundingClientRect","console","log","JSON","stringify","clientX","clientY","target","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","decl","getComputedStyle","strNumber","parseInt","left","top","Error","mousePosition","_viewportToCanvasCoordinate","timer","data","found","CanvasAppFactroy","c","fillCircle","context","radius","fillStype","save","beginPath","arc","PI","fill","restore","fillText","text","color","algin","baseline","font","textAlign","textBaseline","strokeLine","x0","y0","x1","y1","moveTo","lineTo","stroke","PlayGround","bezier","perFrame","direction","progress","draw_","counter","Title","rectSprite","addTimer","drawBackground","drawText","ofX","offsetX","offsetY","textBaseLine","size","is_center","centerX","centerY","lineWidth","fillRect","clearRect","gutter","strokeStyle","strokeGrid","draw","pt","scaleXYAndAdd","GamePlay","app","run","document","getElementById","createInstance","start","element","className","ReactDOM","render"],"mappings":"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","file":"static/js/main.c9c2f581.chunk.js","sourcesContent":["import { Point } from './../Interpolation/Point';\r\nimport { Transform } from \"./Transform\";\r\n\r\nexport abstract class BaseSprite{\r\n    constructor(\r\n        layer?:number,layerSort?:number,\r\n        parent?:Transform\r\n    ){\r\n        this.transform=new Transform();\r\n        this.type = BaseSpriteType.None;\r\n        this.spriteLayer=new Point(layer||0,layerSort||0);\r\n        this.transform.parent=parent || this.transform;\r\n    }\r\n    public type:BaseSpriteType;\r\n    public transform:Transform;\r\n    /**\r\n     * x为层级\r\n     * y为在该层级内的排序\r\n     */\r\n    public spriteLayer:Point;\r\n\r\n    public abstract draw(ctx:CanvasRenderingContext2D):void;\r\n}\r\n\r\nexport enum BaseSpriteType{\r\n    None=0,\r\n    Square=1,\r\n    Circle=2,\r\n    Rect=3,\r\n    Custome=4,\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//https://bag-of-tricks.github.io/modules/math.html\r\n\r\nimport { addNumbers, clamp, getMean } from \"@baggie/math\";\r\nimport { NonEmptyArray } from \"_@baggie_typescript@0.1.7-alpha.1@@baggie/typescript\";\r\n\r\nexport class MathTools{\r\n    constructor(){}\r\n\r\n    //将一个数字数组加和\r\n    public static Sum(numbers: NonEmptyArray<number>):number{\r\n        try{\r\n            return addNumbers(numbers);\r\n        }catch(error){\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    //获取平均值\r\n    public static GetAverage(numbers:NonEmptyArray<number>):number{\r\n        try{\r\n            return getMean(numbers);\r\n        }catch(error){\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    public static Sqrt(x:number):number{\r\n        return Math.sqrt(x);\r\n    }\r\n\r\n    public static Clamp(value:number,minv:number,maxv:number){\r\n        return clamp(value,minv,maxv);\r\n    }\r\n\r\n    public static Absf(value:number):number{\r\n        return Math.abs(value);\r\n    }\r\n}","import { MathTools } from '../MathTools';\r\n\r\nexport interface PointLike{\r\n    x:number,\r\n    y:number\r\n}\r\n\r\n//插值计算中的笛卡尔下的点\r\nexport class Point{\r\n    constructor(x?:number,y?:number){\r\n        this.x=x || 1;\r\n        this.y=y || 1;\r\n    }\r\n    public x:number;\r\n    public y:number;\r\n\r\n    public clone(){\r\n        return new Point(this.x,this.y);\r\n    }\r\n\r\n    public set(x:number,y:number){\r\n        this.x=x;\r\n        this.y=y;\r\n    }\r\n\r\n    public equal(other:Point){\r\n        return other.x===this.x && other.y===this.y;\r\n    }\r\n\r\n    public add(other:Point){\r\n        this.x+=other.x;\r\n        this.y+=other.y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 数乘\r\n    */\r\n    public scale(scalar:number){\r\n        this.x*=scalar;\r\n        this.y*=scalar;\r\n    }\r\n\r\n    public scaleAndAdd(other:Point,scalar:number){\r\n        this.x += other.x*scalar;\r\n        this.y += other.y*scalar;\r\n    }\r\n\r\n    /**\r\n     * XY不等价数乘\r\n     * @param scalar \r\n     */\r\n    public scaleXY(scalar:Point){\r\n        this.x*=scalar.x;\r\n        this.y*=scalar.y;\r\n    }\r\n\r\n    public scaleXYAndAdd(other:Point,scalar:Point){\r\n        this.x += other.x*scalar.x;\r\n        this.y += other.y*scalar.y;\r\n    }\r\n\r\n    public sub(other: Point){\r\n        this.x -= other.x;\r\n        this.y -= other.y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 点乘\r\n     * @param other 另外一个点\r\n     */\r\n    public dot(other:Point){\r\n        return this.x*other.x+this.y*other.y;\r\n    }\r\n\r\n    /**\r\n     * 获取到原点的距离\r\n     */\r\n    public len(){\r\n        return MathTools.Sqrt(this.lenSquare());\r\n    }\r\n\r\n    public lenSquare(){\r\n        return this.x*this.x + this.y*this.y;\r\n    }\r\n\r\n    /**\r\n     * 归一化\r\n     */\r\n    public normalize(){\r\n        const len =this.len();\r\n        this.x /=len;\r\n        this.y /=len;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 到另一个点的距离\r\n     * @param other\r\n     */\r\n    public distance(other:Point):number{\r\n        return MathTools.Sqrt(this.distanceSquare(other));\r\n    }\r\n\r\n    public distanceSquare(other:Point){\r\n        const dx = this.x -other.x;\r\n        const dy = this.y - other.y;\r\n        return dx*dx+dy*dy;\r\n    }\r\n\r\n    public negate(){\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n    }\r\n\r\n    /**\r\n     * 线性插值\r\n     * @param p0 A点\r\n     * @param p1 B点\r\n     * @param t 时间比例\r\n     */\r\n    static lerp(p0:Point,p1:Point,t:number):Point{\r\n        const onet =1-t;\r\n        var out:Point=new Point(0,0);\r\n        out.x = onet * p0.x + t* p1.x;\r\n        out.y = onet * p0.y + t*p1.y;\r\n        return out;\r\n    }\r\n\r\n}","import { Point } from \"../Interpolation/Point\";\r\n\r\nexport class Transform{\r\n    constructor(){\r\n        this._position = new Point();\r\n        this.rotation = new Point();\r\n        this.localScale = new Point();\r\n        this.localPosition = new Point();\r\n        this.childs=new Array<Transform>();\r\n    }\r\n    private _position:Point;\r\n    public rotation:Point;\r\n    public localScale:Point;\r\n    public localPosition:Point;\r\n    public root:Transform=this;\r\n    public childs:Array<Transform>;\r\n    private _parent:Transform=this;\r\n\r\n    public set parent(p:Transform){\r\n        if(p!=this._parent){\r\n            if(this._parent!=this){\r\n                this._parent.RemoveChild(this);\r\n            }\r\n            this._parent=p;\r\n            p.AddChild(this);\r\n        }\r\n    }\r\n\r\n    public get parent():Transform{\r\n        return this._parent;\r\n    }\r\n\r\n    private AddChild(cld:Transform):void{\r\n        this.childs.push(cld);\r\n    }\r\n    private RemoveChild(cld:Transform):void{\r\n        let index = this.childs.indexOf(cld);\r\n        if(index>-1){\r\n            this.childs.splice(index,1);\r\n        }\r\n    }\r\n\r\n    public get position(){\r\n        return this._position;\r\n    }\r\n    public set position(pos:Point){\r\n        this._position=pos;\r\n    }\r\n\r\n}\r\n\r\n","import { Point } from \"../../Interpolation/Point\";\r\nimport { BaseSprite } from \"../BaseSprite\";\r\nimport { Transform } from \"../Transform\";\r\n\r\nexport class RectSprite extends BaseSprite{\r\n    public draw(ctx:CanvasRenderingContext2D): void {\r\n        ctx.strokeRect(\r\n            this.transform.position.x,this.transform.position.y,\r\n            this.rectInfo.x,this.rectInfo.y\r\n        );\r\n    }\r\n    private _rectInfo:Point;\r\n    constructor(\r\n        height:number,width:number,\r\n        layer?:number,layerSort?:number,\r\n        parent?:Transform\r\n    ){\r\n        super(layer,layerSort,parent);\r\n        this._rectInfo = new Point(height,width);\r\n    }\r\n\r\n    public get rectInfo():Point{\r\n        let newRect:Point = this._rectInfo.clone();\r\n        newRect.scaleXY(this.transform.localScale);\r\n        return newRect;\r\n    }\r\n\r\n}","import { vec2 } from './Vec2';\r\n/**\r\n * 输入事件的分发和响应\r\n */\r\n\r\n//事件类型枚举\r\nexport enum EInputEventType{\r\n    MOUSEEVENT,\r\n    MOUSEDOWN,\r\n    MOUSEUP,\r\n    MOUSEMOVE,\r\n    MOUSEDRAG,\r\n    KEYBOARDEVENT,\r\n    KEYUP,\r\n    KEYDOWN,\r\n    KEYPRESS\r\n}\r\n\r\nexport class CanvasInputEvent{\r\n    public altKey:boolean;\r\n    public ctrlKey:boolean;\r\n    public shiftKey:boolean;\r\n    //当前事件类型\r\n    public type:EInputEventType;\r\n    public constructor(\r\n        altKey:boolean=false,\r\n        ctrlKey: boolean = false,\r\n        shiftKey: boolean = false,\r\n        type: EInputEventType = EInputEventType.MOUSEEVENT\r\n    ){\r\n        this.altKey = altKey\r\n        this.ctrlKey = ctrlKey\r\n        this.shiftKey = shiftKey\r\n        this.type = type\r\n    }\r\n}\r\n\r\nexport class CanvasMouseEvent extends CanvasInputEvent{\r\n    // button 表示按下鼠标的哪个键 [0: 左键，1: 中键，2: 右键]\r\n    public button:number;\r\n    // 基于canvas坐标系的表示\r\n    public canvasPosition: vec2\r\n    public localPosition: vec2\r\n\r\n    public constructor(\r\n        canvasPos: vec2,\r\n        button: number,\r\n        altKey: boolean = false,\r\n        ctrlKey: boolean = false,\r\n        shiftKey: boolean = false\r\n      ) {\r\n        super(altKey, ctrlKey, shiftKey)\r\n        this.canvasPosition = canvasPos\r\n        this.button = button\r\n\r\n        // 暂时创建一个vec2对象\r\n        this.localPosition = vec2.create()\r\n      }\r\n}\r\n\r\n/**\r\n *键盘事件\r\n *\r\n * @export\r\n * @class CanvasKeyBoardEvent\r\n * @extends {CanvasInputEvent}\r\n */\r\nexport class CanvasKeyBoardEvent extends CanvasInputEvent{\r\n    // 当前按下的ASCII字符\r\n    public key: string\r\n    // 当前按下的ASCII码\r\n    public keyCode: number\r\n    // 当前按下的键是否不停的出发事件\r\n    public repeat: boolean\r\n    public constructor(\r\n      key: string,\r\n      keyCode: number,\r\n      repeat: boolean,\r\n      altKey: boolean = false,\r\n      ctrlKey: boolean = false,\r\n      shiftKey: boolean = false\r\n    ) {\r\n      super(altKey, ctrlKey, shiftKey, EInputEventType.KEYBOARDEVENT)\r\n      this.key = key\r\n      this.keyCode = keyCode\r\n      this.repeat = repeat\r\n    }\r\n  }","import { NonEmptyArray } from '_@baggie_typescript@0.1.7-alpha.1@@baggie/typescript';\r\nimport { Point } from './Point';\r\nexport class BezierCurve{\r\n    constructor(){}\r\n\r\n    /**\r\n     * N阶贝塞尔曲线递归实现\r\n     * @param time 时间[0-1]\r\n     * @param point 控制点集\r\n     */\r\n    public Bezier(time:number,point:Array<Point>):Point{\r\n        if(point.length < 2){\r\n            return point[0];\r\n        }\r\n        var newPoint:Array<Point> = new Array<Point>();\r\n        for(var i=0;i<point.length-1;++i){\r\n            var np:Point=point[i].clone();\r\n            np.scale(1-time);\r\n            np.scaleAndAdd(point[i+1],time);\r\n            newPoint.push(np);\r\n        }\r\n        return this.Bezier(time,newPoint);\r\n    }\r\n}","export type CoreTimerCallback = (id: number, data: any) => void;\r\n\r\n/**\r\n * 计时器\r\n * 1. Application能够同时触发多个计时器\r\n * 2. 每个计时器能以不同帧率重复执行任务\r\n * 3. 每个计时器能够以倒计时方式执行一次任务\r\n * 4. 尽量让内存使用和执行效率达到相对平衡\r\n *\r\n * @export\r\n * @class Timer\r\n */\r\nexport default class CoreTimer {\r\n  // 唯一ID\r\n  public id: number = -1;\r\n  public enabled: boolean = false;\r\n  public callback: CoreTimerCallback;\r\n  public callbackData: any = undefined;\r\n  public countdown: number = 0;\r\n  public timeout: number = 0;\r\n  public onlyOnce: boolean = false;\r\n  constructor(callback: CoreTimerCallback) {\r\n    this.callback = callback;\r\n  }\r\n}\r\n\r\n","export class vec2 {\r\n    public values: Float32Array\r\n    public constructor(x: number = 0, y: number = 0) {\r\n      this.values = new Float32Array([x, y])\r\n    }\r\n    public toString(): string {\r\n      return `[${this.values[0]},${this.values[1]}]`\r\n    }\r\n    public get x(): number {\r\n      return this.values[0]\r\n    }\r\n    public get y(): number {\r\n      return this.values[1]\r\n    }\r\n    public set x(x: number) {\r\n      this.values[0] = x\r\n    }\r\n    public set y(y: number) {\r\n      this.values[0] = y\r\n    }\r\n  \r\n    // 静态方法\r\n    public static create(x: number = 0, y: number = 0): vec2 {\r\n      return new vec2(x, y)\r\n    }\r\n  }","\r\nimport CoreTimer, { CoreTimerCallback } from \"./Shared/CoreTimer\";\r\nimport { CanvasKeyBoardEvent, CanvasMouseEvent } from \"./Shared/Event\";\r\nimport { vec2 } from \"./Shared/Vec2\";\r\n\r\n\r\ninterface EventListenerObject{\r\n    handleEvent(evt:Event):void;\r\n}\r\n/**\r\n * 全局生命周期\r\n * https://blog.csdn.net/weixin_34310127/article/details/91444405\r\n */\r\nexport class C2DApplication implements EventListenerObject{\r\n    protected _start:boolean =false;\r\n    protected _appId:number = 1;\r\n    protected _lastTime!:number;\r\n    protected _startTime!:number;\r\n    private _fps:number = 0;\r\n    public canvas :HTMLCanvasElement;\r\n\r\n    //为mouseMove事件提供变量开关\r\n    public isSupportMouseMove:boolean;\r\n    protected _isMouseDown:boolean;\r\n\r\n    //计时器功能\r\n    public timers:CoreTimer[] = []\r\n    //Timer id 从0 开始,负数为无效ID\r\n    private _timerId:number = -1;\r\n\r\n    public constructor(canvas:HTMLCanvasElement){\r\n        this.canvas=canvas;\r\n        //canvas 监听鼠标事件\r\n        this.canvas.addEventListener('mousedown', this, false)\r\n        this.canvas.addEventListener('mouseup', this, false)\r\n        this.canvas.addEventListener('mousemove', this, false)\r\n\r\n        window.addEventListener('keydown', this, false)\r\n        window.addEventListener('keyup', this, false)\r\n        window.addEventListener('keypress', this, false)\r\n        //Window监听键盘事件\r\n\r\n        //默认不支持move\r\n        this.isSupportMouseMove=false;\r\n        //默认不支持按下鼠标\r\n        this._isMouseDown=false;\r\n    }\r\n\r\n    public stop(){\r\n        if(this._start){\r\n            cancelAnimationFrame(this._appId);\r\n            this._appId=-1;\r\n            this._lastTime=-1;\r\n            this._startTime=-1;\r\n            this._start=false;\r\n        }\r\n    }\r\n\r\n    public isRunning():boolean{\r\n        return this._start;\r\n    }\r\n\r\n    public get fps():number{\r\n        return this._fps;\r\n    }\r\n\r\n    public start():void{\r\n        if(!this._start){\r\n            this._start=true;\r\n            this._appId=-1;\r\n            this._lastTime=-1;\r\n            this._startTime=-1;\r\n            this._appId=requestAnimationFrame(this.step.bind(this));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 基于时间的重绘和更新\r\n     * @param timeStamp 时间戳\r\n     */\r\n    protected step(timeStamp:number):void{\r\n        if(this._startTime===-1) this._startTime=timeStamp;\r\n        if(this._lastTime===-1)this._lastTime=timeStamp;\r\n\r\n        //计算当前时间距离第一次时间的差值\r\n        let elapsedMsec:number = timeStamp - this._startTime;\r\n        //计算当前时间距离上一次时间点的差值\r\n        let intervalSec:number =timeStamp-this._lastTime;\r\n        //计算fps\r\n        if(intervalSec!==0){\r\n            this._fps = 1000/intervalSec;\r\n        }\r\n        //将intervalSec化为秒\r\n        intervalSec/=1000;\r\n        this._lastTime=timeStamp;\r\n\r\n\r\n        this._handleTimers(intervalSec);\r\n\r\n        //this.FixedUpdate();\r\n        //先更新\r\n        this.Update(elapsedMsec,intervalSec);\r\n        //再渲染\r\n        this.Render();\r\n        this._appId = requestAnimationFrame(\r\n            (elapsedMsec:number):void=>{\r\n                this.step(elapsedMsec);\r\n            }\r\n        )\r\n    }\r\n    //protected FixedUpdate():void{}\r\n    //更新,子类重写\r\n    /**\r\n     * Update\r\n     * @param elapsedMsec 距离第一次\r\n     * @param intervalSec 距离上一次\r\n     */\r\n    protected Update(elapsedMsec:number,intervalSec:number):void{}\r\n    //渲染,子类覆写\r\n    protected Render():void{}\r\n\r\n//#region 分发事件\r\n    // 分发事件\r\n    public handleEvent(evt: Event): void {\r\n        switch (evt.type) {\r\n        case 'mousedown':\r\n            this._isMouseDown = true\r\n            this.dispatchMouseDown(this._toCanvasMouseEvent(evt))\r\n            break\r\n        case 'mouseup':\r\n            this._isMouseDown = false\r\n            this.dispatchMouseUp(this._toCanvasMouseEvent(evt))\r\n            break\r\n        case 'mousemove':\r\n            // 如果支持move，则分发事件\r\n            if (this.isSupportMouseMove) {\r\n            this.dispatchMouseMove(this._toCanvasMouseEvent(evt))\r\n            }\r\n            // 如果按下一个键拖动，出发drag事件\r\n            if (this._isMouseDown) {\r\n            this.dispatchMouseDrag(this._toCanvasMouseEvent(evt))\r\n            }\r\n            break\r\n        case 'keypress':\r\n            this.dispatchKeyPress(this._toCanvasKeyBoardEvent(evt))\r\n            break\r\n        case 'keydown':\r\n            this.dispatchKeyDown(this._toCanvasKeyBoardEvent(evt))\r\n            break\r\n        case 'keyUp':\r\n            this.dispatchKeyUp(this._toCanvasKeyBoardEvent(evt))\r\n            break\r\n        default:\r\n            break\r\n        }\r\n    }\r\n\r\n    // 具体事件处理方法，子类覆写\r\n    protected dispatchMouseDown(evt: CanvasMouseEvent) { }\r\n    protected dispatchMouseUp(evt: CanvasMouseEvent) { }\r\n    protected dispatchMouseMove(evt: CanvasMouseEvent) { }\r\n    protected dispatchMouseDrag(evt: CanvasMouseEvent) { }\r\n    protected dispatchKeyPress(evt: CanvasKeyBoardEvent) { }\r\n    protected dispatchKeyDown(evt: CanvasKeyBoardEvent) { }\r\n    protected dispatchKeyUp(evt: CanvasKeyBoardEvent) { }\r\n\r\n\r\n    /**\r\n    * 将鼠标指针位置转换为基于canvas元素的偏移表示\r\n    * 即相对于viewpoint的点变换到相对于canvas表示的点\r\n    * 本类私有可用，鼠标事件发生时调用\r\n     * @param event \r\n     */\r\n    private _viewportToCanvasCoordinate(event:MouseEvent):vec2{\r\n        if (this.canvas) {\r\n            let rect: ClientRect = this.canvas.getBoundingClientRect()\r\n            // 测试mousedown\r\n            if (event.type === 'mousedown') {\r\n              console.log(`boundingClientRect: ${JSON.stringify(rect)},clientX: ${event.clientX}, clientY: ${event.clientY}`)\r\n            }\r\n            if (event.target) {\r\n              let borderLeftWidth: number = 0\r\n              let borderTopWidth: number = 0\r\n              let paddingLeft: number = 0\r\n              let paddingTop: number = 0\r\n              let decl: CSSStyleDeclaration = window.getComputedStyle(event.target as HTMLElement)\r\n      \r\n              // borderLeftWidth\r\n              let strNumber: string | null = decl.borderLeftWidth\r\n              if (strNumber !== null) {\r\n                borderLeftWidth = parseInt(strNumber, 10)\r\n              }\r\n              // borderTopWidth\r\n              strNumber = decl.borderTopWidth\r\n              if (strNumber !== null) {\r\n                borderTopWidth = parseInt(strNumber, 10)\r\n              }\r\n              // paddingLeft\r\n              strNumber = decl.paddingLeft\r\n              if (strNumber !== null) {\r\n                paddingLeft = parseInt(strNumber, 10)\r\n              }\r\n              // paddingTop\r\n              strNumber = decl.paddingTop\r\n              if (strNumber !== null) {\r\n                paddingTop = parseInt(strNumber, 10)\r\n              }\r\n      \r\n              let x: number = event.clientX - rect.left - borderLeftWidth - paddingLeft\r\n              let y: number = event.clientY - rect.top - borderTopWidth - paddingTop\r\n              return vec2.create(x, y)\r\n            }else {\r\n                throw new Error('canvas is null.');\r\n            }\r\n        } else {\r\n            throw new Error('canvas is null.');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 将DOM EVENT转换为自己定义的CanvasMouseEvent\r\n     *\r\n     * @private\r\n     * @param {Event} evt\r\n     * @returns {CanvasMouseEvent}\r\n     * @memberof Application\r\n     */\r\n    private _toCanvasMouseEvent(evt: Event): CanvasMouseEvent {\r\n        let event: MouseEvent = evt as MouseEvent\r\n        let mousePosition: vec2 = this._viewportToCanvasCoordinate(event)\r\n        let canvasMouseEvent: CanvasMouseEvent\r\n        = new CanvasMouseEvent(\r\n            mousePosition,\r\n            event.button,\r\n            event.altKey,\r\n            event.ctrlKey,\r\n            event.shiftKey\r\n        )\r\n        return canvasMouseEvent\r\n    }\r\n    /**\r\n     * 将DOM EVENT转化为自己定义的CanvasKeyBoardEvent\r\n     *\r\n     * @private\r\n     * @param {Event} evt\r\n     * @returns {CanvasKeyBoardEvent}\r\n     * @memberof Application\r\n     */\r\n    private _toCanvasKeyBoardEvent(evt: Event): CanvasKeyBoardEvent {\r\n        let event: KeyboardEvent = evt as KeyboardEvent\r\n        let canvasKeyBoardEvent: CanvasKeyBoardEvent\r\n        = new CanvasKeyBoardEvent(\r\n            event.key,\r\n            event.keyCode,\r\n            event.repeat,\r\n            event.altKey,\r\n            event.ctrlKey,\r\n            event.shiftKey\r\n        )\r\n        return canvasKeyBoardEvent\r\n    }\r\n//#endregion\r\n\r\n\r\n//#region 定时器相关\r\n    /**\r\n     * 处理定时器函数,update函数中调用\r\n     * @param intervalSec\r\n     */\r\n    private _handleTimers(intervalSec:number):void{\r\n        if(this.timers.length <= 0) return;\r\n        //遍历timers,查找出enabled为true的timer\r\n        //countdown不断递减,小于等于0时执行一次callback\r\n        for(let i =0;i<this.timers.length;++i){\r\n            let timer:CoreTimer =this.timers[i];\r\n            if(timer.enabled===false)continue;\r\n            timer.countdown -= intervalSec;\r\n\r\n            if(timer.countdown<=0){\r\n                timer.callback(timer.id,timer.callbackData);\r\n                if(timer.onlyOnce === false){\r\n                    timer.countdown=timer.timeout;\r\n                }else{\r\n                    timer.enabled=false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 增加定时器，如果有存在enabled为false的定时器\r\n     * 则直接取出来而不是new 一个\r\n     *\r\n     * @param {TimerCallback} callback\r\n     * @param {number} [timeout=1]\r\n     * @param {boolean} [onlyOnce=false]\r\n     * @param {*} [data=undefined]\r\n     * @returns {number}\r\n     * @memberof Application\r\n     */\r\n    public addTimer(\r\n        callback: CoreTimerCallback,\r\n        timeout: number = 1,\r\n        onlyOnce: boolean = false,\r\n        data: any = undefined\r\n    ): number {\r\n        let timer: CoreTimer\r\n        for (let i = 0; i < this.timers.length; i++) {\r\n        let t = this.timers[i]\r\n        if (t.enabled === false) {\r\n            t.callback = callback\r\n            t.callbackData = data\r\n            t.timeout = timeout\r\n            t.countdown = timeout\r\n            t.enabled = true\r\n            t.onlyOnce = onlyOnce\r\n            return t.id\r\n        }\r\n        }\r\n        timer = new CoreTimer(callback)\r\n        timer.callbackData = data\r\n        timer.timeout = timeout\r\n        timer.countdown = timeout\r\n        timer.enabled = true\r\n        timer.onlyOnce = onlyOnce\r\n        timer.id = ++this._timerId\r\n        this.timers.push(timer)\r\n\r\n        return timer.id\r\n    }\r\n\r\n        /**\r\n     * 移除定时器 【逻辑删除，设置enable状态】\r\n     *\r\n     * @param {number} id\r\n     * @returns {boolean}\r\n     * @memberof Application\r\n     */\r\n    public removeTimer(id: number): boolean {\r\n        let found: boolean = false\r\n        for (let i = 0; i < this.timers.length; i++) {\r\n            if (this.timers[i]['id'] === id) {\r\n                this.timers[i]['enabled'] = false\r\n                found = true\r\n                break\r\n            }\r\n        }\r\n        return found;\r\n    }\r\n\r\n//#endregion\r\n\r\n}\r\n\r\nexport class Canvas2DApplication extends C2DApplication {\r\n    protected context2D: CanvasRenderingContext2D | null\r\n\r\n    constructor(canvas: HTMLCanvasElement) {\r\n      let cv = <HTMLCanvasElement>canvas;\r\n      super(cv);\r\n      this.context2D = this.canvas.getContext('2d');\r\n      //let H = this.canvas.height = window.innerHeight / 4 *3;\r\n      //let W = this.canvas.width = window.innerWidth / 4 * 3;\r\n      let H = this.canvas.height = 768;\r\n      let W = this.canvas.width = 1024;\r\n      if(this.context2D!=null)\r\n        this.context2D.fillStyle = \"#53B7F6\";\r\n    }\r\n}\r\n\r\nexport class CanvasAppFactroy{\r\n    public static createInstance<T extends Canvas2DApplication>(c:new(cv:HTMLCanvasElement)=>T,canvas:HTMLCanvasElement):T{\r\n        return new c(canvas);\r\n    }\r\n}","// 绘制实心点或圆\r\nexport const fillCircle = (\r\n  context: CanvasRenderingContext2D,\r\n  x: number,\r\n  y: number,\r\n  radius: number,\r\n  fillStype: string | CanvasGradient | CanvasPattern = \"red\"\r\n): void => {\r\n  if (context !== null) {\r\n    context.save();\r\n    context.fillStyle = fillStype;\r\n    context.beginPath();\r\n    context.arc(x, y, radius, 0, Math.PI * 2);\r\n    context.fill();\r\n    context.restore();\r\n  }\r\n};\r\n\r\n// 绘制实心文字\r\nexport type TextAlign = \"start\" | \"left\" | \"center\" | \"right\" | \"end\";\r\nexport type TextBaseline = \"alphabetic\" | \"hanging\" | \"top\" | \"middle\" | \"bottom\";\r\nexport const fillText = (\r\n  context: CanvasRenderingContext2D,\r\n  text: string,\r\n  x: number,\r\n  y: number,\r\n  color: string = \"#fff\",\r\n  algin: TextAlign = \"left\",\r\n  baseline: TextBaseline = \"middle\",\r\n  font: string = \"14px sans-serif\"\r\n): void => {\r\n  if (context !== null) {\r\n    context.save();\r\n    context.textAlign = algin;\r\n    context.textBaseline = baseline;\r\n    context.font = font;\r\n    context.fillStyle = color;\r\n    context.fillText(text, x, y);\r\n    context.restore();\r\n  }\r\n};\r\n\r\n// 绘制线段\r\nexport const strokeLine = (\r\n  context: CanvasRenderingContext2D,\r\n  x0: number,\r\n  y0: number,\r\n  x1: number,\r\n  y1: number\r\n): void => {\r\n  if (context !== null) {\r\n    context.beginPath();\r\n    context.moveTo(x0, y0);\r\n    context.lineTo(x1, y1);\r\n    context.stroke();\r\n  }\r\n};\r\n\r\n// 绘制坐标轴\r\nexport const strokeCoord = (\r\n  context: CanvasRenderingContext2D,\r\n  originX: number,\r\n  originY: number,\r\n  width: number,\r\n  height: number\r\n): void => {\r\n  if (context !== null) {\r\n    context.save();\r\n    // x 轴\r\n    context.strokeStyle = \"red\";\r\n    strokeLine(context, originX, originY, originX + width, originY);\r\n    // y 轴\r\n    context.strokeStyle = \"blue\";\r\n    strokeLine(context, originX, originY, originX, originY + height);\r\n    context.restore();\r\n  }\r\n};\r\n\r\n// 绘制网格\r\nexport const strokeGrid = (\r\n  context: CanvasRenderingContext2D,\r\n  color: string,\r\n  gutter: number = 10\r\n): void => {\r\n  if (context !== null) {\r\n    context.save();\r\n    context.strokeStyle = color;\r\n    context.lineWidth = 0.5;\r\n    // 从左向右画竖线\r\n    for (let i: number = gutter + 0.5; i < context.canvas.width; i += gutter) {\r\n      strokeLine(context, i, 0, i, context.canvas.height);\r\n    }\r\n    // 从上向下画竖线\r\n    for (let i: number = gutter + 0.5; i < context.canvas.height; i += gutter) {\r\n      strokeLine(context, 0, i, context.canvas.width, i);\r\n    }\r\n    context.restore();\r\n  }\r\n};\r\n","import { RectSprite } from './../Core/Sprite/CoreSprite/RectSprite';\r\nimport { TextBaseline } from '../Core/App/DrawUtils/draw';\r\nimport { MathTools } from '../Core/MathTools';\r\nimport { BezierCurve } from '../Core/Interpolation/BezierCurve';\r\nimport { Canvas2DApplication } from \"../Core/App/C2DApplication\";\r\nimport {\r\n    fillText,\r\n    strokeGrid,\r\n    fillCircle,\r\n    strokeCoord,\r\n    TextAlign,\r\n} from \"../Core/App/DrawUtils/draw\";\r\nimport {\r\n    CanvasKeyBoardEvent,\r\n    CanvasMouseEvent,\r\n} from \"../Core/App/Shared/Event\";\r\nimport { Point } from '../Core/Interpolation/Point';\r\n\r\nexport class PlayGround extends Canvas2DApplication {\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        super(canvas);\r\n        this.bezier=new BezierCurve();\r\n        this.point = new Point(40,40);\r\n        this.perFrame = 2000;\r\n        this.direction = true; //初始正向\r\n        this.progress=0.0;\r\n        this.draw_ = true;\r\n        this.counter=0;\r\n\r\n        this.addTimer(\r\n            (id,data)=>{\r\n                this.draw_=!this.draw_;\r\n            },\r\n            0.65,\r\n            false,\r\n            null\r\n        );\r\n        this.addTimer(\r\n            (id,data)=>{\r\n                this.counter=(this.counter+1)%this.Title.length;\r\n            },\r\n            0.5,\r\n            false,\r\n            null\r\n        )\r\n        this.rectSprite=new RectSprite(50,80);\r\n    }\r\n    private bezier:BezierCurve;\r\n    private point:Point;\r\n    private perFrame:number;\r\n    private direction:boolean;\r\n    private progress:number;\r\n\r\n    private draw_:boolean;\r\n    private counter:number;\r\n    private Title:string=\"ちょう　ぶん　とう\";\r\n\r\n    private rectSprite:RectSprite;\r\n\r\n\r\n    protected Render(): void {\r\n        this.drawBackground();\r\n        this.drawText(\"浪迹天涯的终极无敌打工仔ZWT参上!\",500,10,\"top\",\"center\",40,false);\r\n        this.drawText(\"露如微霰下前池，月过回塘万竹悲。\",500,80,\"top\",\"center\",20,false);\r\n        this.drawText(\"浮世本来多聚散，红蕖何事亦离披。\",500,110,\"top\",\"center\",20,false);\r\n        this.drawText(\"悠扬归梦惟灯见，濩落生涯独酒知。\",500,140,\"top\",\"center\",20,false);\r\n        this.drawText(\"岂到白头长只尔，嵩阳松雪有心期。\",500,170,\"top\",\"center\",20,false);\r\n        this.drawText(\"---《七月二十九日崇让宅宴作》\",550,210,\"top\",\"center\",15,false);\r\n        if(this.context2D !== null){\r\n            for(var i=0;i<=this.counter;++i){\r\n                let ofX=(i-this.Title.length)*80+this.context2D.canvas.width-this.Title.length*75;\r\n                this.drawText(this.Title[i],ofX,0,\"middle\",\"center\",70,true);\r\n            }\r\n        }\r\n        if(this.draw_){\r\n            this.drawText(\"____\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param text 文本\r\n     * @param offsetX X轴偏移量\r\n     * @param offsetY Y轴偏移量\r\n     * @param textBaseLine 与画布对齐方式\r\n     * @param textAlign 文本框内对齐方式\r\n     * @param size 大小\r\n     * @param is_center 是否居中\r\n     */\r\n    protected drawText(text: string,offsetX:number=0,offsetY:number=0,textBaseLine:TextBaseline=\"middle\",textAlign:TextAlign=\"center\",size:number=140,is_center:boolean=true): void {\r\n        if (this.context2D !== null) {\r\n            let c = this.context2D;\r\n            // 计算cnavas中心坐标\r\n            let centerX: number = 0;\r\n            let centerY: number = 0;\r\n            if(is_center){\r\n                centerX = c.canvas.width * 0.5;\r\n                centerY = c.canvas.height * 0.5;\r\n            }\r\n\r\n            fillText(\r\n                c,\r\n                text,\r\n                centerX+offsetX,\r\n                centerY+offsetY,\r\n                \"#000\",\r\n                textAlign,\r\n                textBaseLine,\r\n                size+\"px sans-serif\"\r\n            );\r\n        }\r\n    }\r\n\r\n    // 画背景\r\n    protected drawBackground(): void {\r\n        let c = this.context2D;\r\n        if (c !== null) {\r\n            c.lineWidth = 10;\r\n            //为指定矩形描边 如果后两个参数中任何一个为0，则画横线或者竖线,都为0则不绘制\r\n            c.strokeRect(75, 100, 200, 200);\r\n            //填充矩形，如何后两个参数任意一个为0，则不绘制\r\n            c.fillRect(325, 100, 200, 200);\r\n            c.clearRect(0, 0, c.canvas.width, c.canvas.height);\r\n            fillCircle(c, this.point.x, this.point.y, 10, \"green\");\r\n            strokeGrid(c, \"#333\", 15);\r\n            fillCircle(c,200,200,80,'rgb('+(255*this.progress)+','+(255-255*this.progress)+',100)');\r\n            //strokeCoord(c, 0, 0, c.canvas.width, c.canvas.height)\r\n\r\n            this.rectSprite.draw(c);\r\n        }\r\n    }\r\n\r\n    protected Update(elapsedMsec:number,intervalSec:number) {\r\n        this.direction = (((elapsedMsec/this.perFrame) & 1)===0);\r\n        this.progress = (elapsedMsec%this.perFrame)/this.perFrame;\r\n        if(!this.direction){\r\n            this.progress = 1-this.progress;\r\n        }\r\n        var pt:Point=this.bezier.Bezier(this.progress,[\r\n            new Point(0.86, 0),\r\n            new Point(0.07, 1),\r\n            new Point(0.52, 0.52),\r\n            new Point(0.74, 0.32)\r\n        ]);\r\n\r\n        //[40,40] - [180,120]\r\n        this.point.x = pt.x*800 + 60;\r\n        this.point.y = pt.y*600 + 60;\r\n\r\n        let pos:Point = new Point(15,1);\r\n        pos.scale(this.direction?1:-1);\r\n        this.rectSprite.transform.position.scaleXYAndAdd(pos,pt);\r\n    }\r\n\r\n    // 鼠标\r\n    protected dispatchMouseDown(evt: CanvasMouseEvent) {\r\n        console.log(\"鼠标按下\", evt);\r\n    }\r\n\r\n    // 按键\r\n    protected dispatchKeyPress(evt: CanvasKeyBoardEvent) {\r\n        console.log(\"按键\", evt);\r\n    }\r\n}\r\n","import { Type } from \"typescript\";\r\nimport { PlayGround } from \"../GamePlay/Test\";\r\nimport { Canvas2DApplication, CanvasAppFactroy } from \"../Core/App/C2DApplication\";\r\nclass GamePlay{\r\n  constructor() {\r\n    this.run.bind(this);\r\n    this.canvas = document.getElementById(\r\n        \"canvas\"\r\n    ) as HTMLCanvasElement;\r\n  }\r\n\r\n  private canvas: HTMLCanvasElement;\r\n  private app?: Canvas2DApplication;\r\n\r\n  public run(): void {\r\n    // 调用\r\n    // 测试定时器\r\n    if (this.canvas !== null) {\r\n        this.app = CanvasAppFactroy.createInstance(PlayGround,this.canvas);\r\n        this.app.start();\r\n    }\r\n  }\r\n}\r\n\r\nexport default GamePlay;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport GamePlay from \"./Componnet/GamePlay\";\n\nconst element = (\n  <div className=\"playground\">\n    <canvas id=\"canvas\"></canvas>\n  </div>\n);\nReactDOM.render(element, document.getElementById(\"root\"));\n\nvar gamePlay:GamePlay=new GamePlay();\ngamePlay.run();\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}